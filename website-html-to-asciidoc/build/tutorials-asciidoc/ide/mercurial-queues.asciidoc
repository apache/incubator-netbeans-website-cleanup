// 
//     Licensed to the Apache Software Foundation (ASF) under one
//     or more contributor license agreements.  See the NOTICE file
//     distributed with this work for additional information
//     regarding copyright ownership.  The ASF licenses this file
//     to you under the Apache License, Version 2.0 (the
//     "License"); you may not use this file except in compliance
//     with the License.  You may obtain a copy of the License at
// 
//       http://www.apache.org/licenses/LICENSE-2.0
// 
//     Unless required by applicable law or agreed to in writing,
//     software distributed under the License is distributed on an
//     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//     KIND, either express or implied.  See the License for the
//     specific language governing permissions and limitations
//     under the License.
//

= mercurial-queues
:jbake-type: page
:jbake-tags: old-site, needs-review
:jbake-status: published
:keywords: Apache NetBeans  mercurial-queues
:description: Apache NetBeans  mercurial-queues
:toc: left
:toc-title:

== Using Support for Mercurial Queues in NetBeans IDE

The NetBeans IDE provides support for the Mercurial Queues extension. The IDE's Mercurial Queues support allows you to create, review or switch between patches within the IDE, as well as refresh patches with local modifications as you fix bugs or update to a new base revision. This document demonstrates how to perform basic patch-specific tasks in the IDE by guiding you through the standard workflow when using Mercurial versioning software for managing patches.

==== Contents

image:netbeans-stamp-80-74.png[title="Content on this page applies to the NetBeans IDE 7.4 and 8.0"]

* link:#reqs[Requirements]
* link:#enable[Enabling the Mercurial Queues Support]
* link:#create[Creating a Patch]
* link:#refresh[Refreshing a Patch With Local Modifications]
* link:#diff[Comparing Patch Revisions]
* link:#switch[Switching Between Patches]
* link:#finish[Finishing Applied Patches]
* link:#summary[Summary]
* link:#seealso[See Also]

=== Requirements

*To complete this tutorial, you need the following software and resources.*

|===
|Software or Resource |Version Required 

|link:https://netbeans.org/downloads/index.html[NetBeans IDE] |Version 7.4 or 8.0 

|link:http://www.oracle.com/technetwork/java/javase/downloads/index.html[Java Development Kit] (JDK) |Version 7 or 8 

|link:http://mercurial.selenic.com/downloads/[Mercurial client software] |1.04 or higher 
|===

*Note:* Refer to the link:mercurial.html#settingUp[Using Mercurial Support in NetBeans IDE] for information on how to install Mercurial client software on your system.

=== Enabling the Mercurial Queues Support

Since Mercurial Queues is an extension, you must explicitly enable it before you can use it.
To start running Mercurial Queues on your Mercurial repository, you need to complete the following steps:

1. On your system , browse to the `.hgrc` file. The default location of the `.hgrc` file on OS X and Linux is `$HOME/.hgrc`, on Windows - `%USERPROFILE%\Mercurial.ini`.
2. Add the lines below to your `.hgrc` file.
[source,java]
----

         [extensions]
         hgext.mq =
----
3. Save the file.

link:#top[top]

=== Creating a Patch

To create a patch, you need to complete the following steps:

1. In the Projects window, select a versioned project and choose `Team` > `Queues` > `Create Patch` (alternatively, right-click the project name and select `Mercurial` > `Queues` > `Create Patch` from the pop-up menu).
The Create Patch dialog box displays.

link:create-patch.png[image:create-patch-small.png[]]

2. Specify the name for a patch in the Patch Name text field.
3. Provide the description of a patch in the Patch Message field.
Alternatively, choose either of the following options and click OK afterwards:
* click the Recent Messages button (image:recent.png[]) to select a message from a list of most recent commit messages
* click the Load Template button (image:load.png[]) to select a message template for a commit message.

*Note:* The provided description of a patch will be used as a commit message when link:#finish[turning the patch into a permanent changeset].

4. Select files to be included into the patch in the Files To Include In Patch table.
5. (Optional) Specify information pertinent to an issue related to the created patch using the fields of the Update Issue area.
6. Click Create Patch.
A new patch is created and added to the `.hg/patches` directory.

link:#top[top]

=== Refreshing a Patch With Local Modifications

To save your progress into the patch you are creating , you need to complete the following steps:

1. Choose `Team` > `Queues` > `Refresh Patch` from the main menu (alternatively, right-click the project name and select `Mercurial` > `Queues` > `Refresh Patch` from the pop-up menu).
The Refresh Patch dialog box displays.

link:refresh-patch.png[image:refresh-patch-small.png[]]

2. Provide the description of a patch in the Patch Message field.
Alternatively, choose either of the following options and click OK afterwards:
* click the Recent Messages button (image:recent.png[]) to select a message from a list of most recent commit messages
* click the Load Template button (image:load.png[]) to select a message template for a commit message.

*Note:* The provided description of a patch will be used as a commit message when link:#finish[turning the patch into a permanent changeset].

3. Select files to be included into the patch in the Files To Include In Patch table.
4. (Optional) In the Update Issue area, specify information pertinent to an issue related to the changes being committed.
5. Click Refresh Patch.
The patch you are working on is updated.

link:#top[top]

=== Comparing Patch Revisions

To generate a patch for review and compare revisions of a patch side by side, you need to complete the following steps:

1. Choose `Team` > `Queues` > `Diff` from the main menu (alternatively, right-click the project name and select `Mercurial` > `Queues` > `Diff` from the pop-up menu).
The Diff Viewer displays differences found in the current patch and all your uncommitted/unrefreshed local changes in side-by-side panels:

link:qdiff.png[image:qdiff-small.png[]]

2. Review and revise differences found in the compared files using either Graphical or Textual Diff Viewer.

*Note:* The Graphical Diff Viewer highlights changes in the files using the following color encoding.

|===
|*Blue* (       ) |Indicates lines that have been changed since the earlier patch. 

|*Green* (       ) |Indicates lines that have been added since the earlier patch. 

|*Red* (       ) |Indicates lines that have been removed since the earlier patch. 
|===

The following icons enable you to make changes directly within the Graphical Diff Viewer.

|===
|Icon |Name |Function 

|image:replace.png[] |*Replace* |Inserts the highlighted text from the previous patch into the current patch. 

|image:replace-all.png[] |*Replace All* |Reverts current version of a patch to the state of its selected previous version. 

|image:remove.png[] |*Remove* |Removes the highlighted text from the current version of a patch so that it mirrors the previous version of a patch. 
|===

link:#top[top]

=== Switching Between Patches

To switch to a particular patch in a patch queue series, you need to complete the following steps:

*Note:* To switch between patches there _must_ be _no_ local modifications in the working copy, otherwise the switch fails.

1. Choose `Team` > `Queues` > `Go To Patch` from the main menu (alternatively, right-click the project name and select `Mercurial` > `Queues` > `Go To Patch` from the pop-up menu).
The Go To Patch dialog box displays a list of all patches available in a stack.

image:go-patch.png[]

*Notes:*

* Names of applied patches display in bold.
* Choose `Team` > `Queues` > `Pop All Patches` to remove the applied patches from the top of the stack and update the working directory to undo the effects of the applied patches.
2. Select the required patch and click Go.
The IDE applies the changes contained in the selected patch to the chosen project, file, or folder.

link:#top[top]

=== Finishing Applied Patches

Once your work on a patch is done, it can be turned into a permanent changeset.
To turn all applied patches in a patch queue series into regular changesets, complete the following steps:

*Note:* To apply all saved patches in the repository, choose `Team` > `Queues` > `Push All Patches` from the main menu.

1. Choose `Team` > `Queues` > `Finish Patches` from the main menu (alternatively, right-click the project name and select `Mercurial` > `Queues` > `Finish Patches` from the pop-up menu).
The Finish Patches dialog box displays.

image:finish-patches.png[]

2. Select the name of a patch to be finished in the patches field.

*Note:* All patches in the series before the selected patch will also be finished.

3. Click Finish Patches.
The IDE turns all applied patches up to the selected patch into regular changesets.

link:#top[top]

=== Summary

This tutorial showed how to perform basic patch-specific tasks in the IDE by guiding you through the standard workflow when using Mercurial versioning software for managing patches. It demonstrated how to enable the Mercurial Queues support in the NetBeans IDE and perform basic tasks on patches while introducing you to some of the Mercurial specific features included in the IDE.

link:#top[top]

link:/about/contact_form.html?to=3&subject=Feedback:%20Using%20Suport%20For%20Mercurial%20Queues%20in%20NetBeans%20IDE[Send Feedback on This Tutorial]


=== See Also

For related material see the following documents:

* link:mercurial.html[Using Mercurial Support in NetBeans IDE]
* link:http://wiki.netbeans.org/HgNetBeansSources[Using Mercurial to Work with NetBeans Sources in the IDE]
* link:http://www.oracle.com/pls/topic/lookup?ctx=nb8000&id=NBDAG234[Versioning Applications with Version Control] in _Developing Applications with NetBeans IDE_

link:#top[top]


NOTE: This document was automatically converted to the AsciiDoc format on 2018-03-13, and needs to be reviewed.
